{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allan\\\\OneDrive\\\\Documentos\\\\ccalajuela_web\\\\client\\\\src\\\\pages\\\\achievements\\\\achievements.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { VictoryBar, VictoryChart } from 'victory';\nimport \"./Achievements.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Achievements = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('global');\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const categories = [\"ciencias\", \"tecnología\", \"arte\", \"otras\"];\n  const years = Array.from({\n    length: 19\n  }, (_, i) => 2006 + i); // Del 2006 al 2024\n\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n    // Restablecer el año o establecer un valor predeterminado si es necesario\n  };\n  const handleYearChange = event => {\n    setSelectedYear(event.target.value);\n  };\n\n  // Función para obtener los datos filtrados (debes definirla según tus datos)\n  const filteredData = getFilteredData(selectedCategory, selectedYear);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"achievements-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCategoryChange,\n      value: selectedCategory,\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category,\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleYearChange,\n      value: selectedYear,\n      children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(VictoryChart, {\n        children: /*#__PURE__*/_jsxDEV(VictoryBar, {\n          data: filteredData,\n          x: \"nombrePremio\",\n          y: \"cantidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Achievements, \"CfIWbkrm8vopwQ3z8WXsrTi5rXg=\");\n_c = Achievements;\nexport default Achievements;\nvar _c;\n$RefreshReg$(_c, \"Achievements\");","map":{"version":3,"names":["React","useState","VictoryBar","VictoryChart","jsxDEV","_jsxDEV","Achievements","_s","selectedCategory","setSelectedCategory","selectedYear","setSelectedYear","Date","getFullYear","categories","years","Array","from","length","_","i","handleCategoryChange","event","target","value","handleYearChange","filteredData","getFilteredData","className","children","onChange","map","category","fileName","_jsxFileName","lineNumber","columnNumber","year","data","x","y","_c","$RefreshReg$"],"sources":["C:/Users/allan/OneDrive/Documentos/ccalajuela_web/client/src/pages/achievements/achievements.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { VictoryBar, VictoryChart } from 'victory';\r\nimport \"./Achievements.css\";\r\n\r\nconst Achievements = () => {\r\n    const [selectedCategory, setSelectedCategory] = useState('global');\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n\r\n    const categories = [\"ciencias\", \"tecnología\", \"arte\", \"otras\"];\r\n    const years = Array.from({length: 19}, (_, i) => 2006 + i); // Del 2006 al 2024\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n        // Restablecer el año o establecer un valor predeterminado si es necesario\r\n    };\r\n\r\n    const handleYearChange = (event) => {\r\n        setSelectedYear(event.target.value);\r\n    };\r\n\r\n    // Función para obtener los datos filtrados (debes definirla según tus datos)\r\n    const filteredData = getFilteredData(selectedCategory, selectedYear);\r\n\r\n    return (\r\n        <div className=\"achievements-container\">\r\n            {/* Contenido del banner */}\r\n\r\n            {/* Selección de categoría */}\r\n            <select onChange={handleCategoryChange} value={selectedCategory}>\r\n                {categories.map(category => (\r\n                    <option key={category} value={category}>{category}</option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* Selección de año */}\r\n            <select onChange={handleYearChange} value={selectedYear}>\r\n                {years.map(year => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* Gráfico de premios */}\r\n            <div className=\"chart-container\">\r\n                {/* Aquí iría tu gráfico VictoryChart con los datos filtrados */}\r\n                <VictoryChart>\r\n                    <VictoryBar data={filteredData} x=\"nombrePremio\" y=\"cantidad\" />\r\n                </VictoryChart>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Achievements;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,YAAY,QAAQ,SAAS;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAClE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAE1E,MAAMC,UAAU,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC;EAC9D,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI,GAAGA,CAAC,CAAC,CAAC,CAAC;;EAE5D,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACpCb,mBAAmB,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACvC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAChCX,eAAe,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;;EAED;EACA,MAAME,YAAY,GAAGC,eAAe,CAACnB,gBAAgB,EAAEE,YAAY,CAAC;EAEpE,oBACIL,OAAA;IAAKuB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAInCxB,OAAA;MAAQyB,QAAQ,EAAET,oBAAqB;MAACG,KAAK,EAAEhB,gBAAiB;MAAAqB,QAAA,EAC3Df,UAAU,CAACiB,GAAG,CAACC,QAAQ,iBACpB3B,OAAA;QAAuBmB,KAAK,EAAEQ,QAAS;QAAAH,QAAA,EAAEG;MAAQ,GAApCA,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGT/B,OAAA;MAAQyB,QAAQ,EAAEL,gBAAiB;MAACD,KAAK,EAAEd,YAAa;MAAAmB,QAAA,EACnDd,KAAK,CAACgB,GAAG,CAACM,IAAI,iBACXhC,OAAA;QAAmBmB,KAAK,EAAEa,IAAK;QAAAR,QAAA,EAAEQ;MAAI,GAAxBA,IAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGT/B,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAE5BxB,OAAA,CAACF,YAAY;QAAA0B,QAAA,eACTxB,OAAA,CAACH,UAAU;UAACoC,IAAI,EAAEZ,YAAa;UAACa,CAAC,EAAC,cAAc;UAACC,CAAC,EAAC;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA7B,EAAA,CA9CKD,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}